{"version":3,"sources":["features/Photo/photoSlice.js","components/NotFound/index.js","components/Header/Header.js","App.js","serviceWorker.js","app/store.js","index.js"],"names":["photo","createSlice","name","initialState","id","title","categoryId","reducers","addPhoto","state","action","unshift","payload","updatePhoto","newPhoto","photoIndex","findIndex","removePhoto","removePhotoId","filter","reducer","actions","NotFound","Header","props","className","Container","Row","Col","xs","to","Photo","React","lazy","App","fallback","exact","from","path","component","Boolean","window","location","hostname","match","rootReducer","photos","photoReducer","store","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6GAAA,kHAEMA,EAAQC,YAAY,CACxBC,KAAM,QACNC,aAAc,CACZ,CACEC,GAAI,KACJC,MAAO,SACPC,WAAY,EACZN,MACE,wEAEJ,CACEI,GAAI,KACJC,MAAO,aACPC,WAAY,EACZN,MACE,0GAEJ,CACEI,GAAI,KACJC,MAAO,OACPC,WAAY,EACZN,MACE,mFAGJ,CACEI,GAAI,KACJC,MAAO,YACPC,WAAY,EACZN,MACE,qFAEJ,CACEI,GAAI,KACJC,MAAO,SACPC,WAAY,EACZN,MACE,kFAEJ,CACEI,GAAI,KACJC,MAAO,WACPC,WAAY,EACZN,MACE,8GAEJ,CACEI,GAAI,KACJC,MAAO,OACPC,WAAY,EACZN,MACE,4FAEJ,CACEI,GAAI,KACJC,MAAO,WACPC,WAAY,EACZN,MACE,mFAGJ,CACEI,GAAI,KACJC,MAAO,WACPC,WAAY,EACZN,MACE,kGAEJ,CACEI,GAAI,KACJC,MAAO,SACPC,WAAY,EACZN,MACE,+OAEJ,CACEI,GAAI,KACJC,MAAO,iBACPC,WAAY,EACZN,MACE,4FAEJ,CACEI,GAAI,KACJC,MAAO,MACPC,WAAY,EACZN,MACE,+FAGNO,SAAU,CACRC,SAAU,SAACC,EAAOC,GAChBD,EAAME,QAAQD,EAAOE,UAEvBC,YAAa,SAACJ,EAAOC,GACnB,IAAMI,EAAWJ,EAAOE,QAClBG,EAAaN,EAAMO,WAAU,SAAChB,GAAD,OAAWA,EAAMI,KAAOU,EAASV,MAEhEW,GAAc,IAChBN,EAAMM,GAAcD,IAGxBG,YAAa,SAACR,EAAOC,GACnB,IAAMQ,EAAgBR,EAAOE,QAC7B,OAAOH,EAAMU,QAAO,SAACnB,GAAD,OAAWA,EAAMI,KAAOc,SAK1CE,EAAqBpB,EAArBoB,QAASC,EAAYrB,EAAZqB,QAEFb,EAAuCa,EAAvCb,SAAUK,EAA6BQ,EAA7BR,YAAaI,EAAgBI,EAAhBJ,YACvBG,O,gCClHf,oBAUeE,IARE,WACf,OACE,6BACE,kD,8OCgBSC,G,MAhBA,SAACC,GACd,OACE,4BAAQC,UAAU,UACjB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKF,UAAU,eACX,kBAACG,EAAA,EAAD,CAAKC,GAAG,QACJ,kBAAC,IAAD,CAAMC,GAAI,IAAKzB,MAAO,QAAQ,0BAAMoB,UAAU,SAAhB,SAAoC,0BAAMA,UAAU,OAAhB,cCA7EM,EAAQC,IAAMC,MAAK,kBAAM,uDAqBhBC,EAnBH,WACV,OACE,yBAAKT,UAAU,aACb,kBAAC,WAAD,CAAUU,SAAU,6CAClB,kBAAC,IAAD,KACE,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,IAAIP,GAAG,YAE5B,kBAAC,IAAD,CAAOQ,KAAK,UAAUC,UAAWR,IACjC,kBAAC,IAAD,CAAOQ,UAAWjB,WCZVkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0BCdAC,EAAc,CAChBC,O,MAAQC,GAOGC,EAJDC,YAAe,CACzB7B,QAASyB,ICCbK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,QAGJK,SAASC,eAAe,SFmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.faa1c0e1.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst photo = createSlice({\r\n  name: \"photo\",\r\n  initialState: [\r\n    {\r\n      id: 1622,\r\n      title: \"Sunset\",\r\n      categoryId: 3,\r\n      photo:\r\n        \"https://photocascadia.files.wordpress.com/2011/09/300x200-300dpi.jpg\",\r\n    },\r\n    {\r\n      id: 2392,\r\n      title: \"Technology\",\r\n      categoryId: 1,\r\n      photo:\r\n        \"https://www.cyberadviserblog.com/wp-content/uploads/sites/18/2018/01/GettyImages-876819618-300x200.jpg\",\r\n    },\r\n    {\r\n      id: 1692,\r\n      title: \"Goat\",\r\n      categoryId: 2,\r\n      photo:\r\n        \"https://cdn.youmed.vn/tin-tuc/wp-content/uploads/2020/05/benh-sot-Q-300x200.jpg\",\r\n    },\r\n\r\n    {\r\n      id: 3632,\r\n      title: \"Beam jump\",\r\n      categoryId: 5,\r\n      photo:\r\n        \"https://www.digitalistmag.com/files/2019/09/272509_272509_l_srgb_s_gl-300x200.jpg\",\r\n    },\r\n    {\r\n      id: 1634,\r\n      title: \"Boxing\",\r\n      categoryId: 3,\r\n      photo:\r\n        \"https://vothuattayson.vn/wp-content/uploads/size-gang-tay-boxing-1-300x200.jpg\",\r\n    },\r\n    {\r\n      id: 8982,\r\n      title: \"Building\",\r\n      categoryId: 6,\r\n      photo:\r\n        \"https://www.cmsmechanical.com/wp-content/uploads/2020/07/Screen-Shot-2020-07-06-at-10.28.12-AM-300x200.png\",\r\n    },\r\n    {\r\n      id: 2455,\r\n      title: \"Beer\",\r\n      categoryId: 5,\r\n      photo:\r\n        \"https://bebidasalcoholicas.org/wp-content/uploads/2019/07/Best-English-Beers-300x200.jpg\",\r\n    },\r\n    {\r\n      id: 5166,\r\n      title: \"Keyboard\",\r\n      categoryId: 6,\r\n      photo:\r\n        \"https://www.semshred.com/wp-content/uploads/2018/11/update-keyboard-300x200.jpg\",\r\n    },\r\n\r\n    {\r\n      id: 2192,\r\n      title: \"Football\",\r\n      categoryId: 5,\r\n      photo:\r\n        \"https://www.numovesphysio.com.au/wp-content/uploads/2016/10/Football-physiotherapy-300x200.jpg\",\r\n    },\r\n    {\r\n      id: 3972,\r\n      title: \"Nature\",\r\n      categoryId: 3,\r\n      photo:\r\n        \"https://lh3.googleusercontent.com/proxy/yborGgj-3wWisv3DSMGxRgUVsyu7u-hn_51mZWXd4R6onk6_P7szLWaPyj5eb6OADzgTTiwm9xWKCaAjCl4g8afX0ut0eING3mXDtDUg0piyFtA3bQtthHYcbZuzvbuKXASu0GxCx9HI7YmZuivWCz4JvC5fT-MbFPrz7ZlRpruhVDP9n6wEMM8MprJ98Ey8XZI\",\r\n    },\r\n    {\r\n      id: 2222,\r\n      title: \"Terrain racing\",\r\n      categoryId: 5,\r\n      photo:\r\n        \"https://adventuresportsjournal.com/wp-content/uploads/2015/03/img_0171-1-WEB-300x200.gif\",\r\n    },\r\n    {\r\n      id: 2622,\r\n      title: \"Car\",\r\n      categoryId: 6,\r\n      photo:\r\n        \"https://moigioinhadat.net.vn/wp-content/uploads/2019/06/Hinh-2-1452-1560928825-300x200.png\",\r\n    },\r\n  ],\r\n  reducers: {\r\n    addPhoto: (state, action) => {\r\n      state.unshift(action.payload);\r\n    },\r\n    updatePhoto: (state, action) => {\r\n      const newPhoto = action.payload;\r\n      const photoIndex = state.findIndex((photo) => photo.id === newPhoto.id);\r\n\r\n      if (photoIndex >= 0) {\r\n        state[photoIndex] = newPhoto;\r\n      }\r\n    },\r\n    removePhoto: (state, action) => {\r\n      const removePhotoId = action.payload;\r\n      return state.filter((photo) => photo.id !== removePhotoId);\r\n    },\r\n  },\r\n});\r\n\r\nconst { reducer, actions } = photo;\r\n\r\nexport const { addPhoto, updatePhoto, removePhoto } = actions;\r\nexport default reducer;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h2>404 - Not found</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"reactstrap\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"header\">\r\n     <Container>\r\n         <Row className=\"header__top\">\r\n             <Col xs=\"auto\">\r\n                 <Link to={\"/\"} title={\"Home\"}><span className=\"photo\">Photo</span><span className=\"app\">App</span></Link>\r\n             </Col>\r\n         </Row>\r\n     </Container>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {}\r\n\r\nexport default Header;\r\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport NotFound from \"./components/NotFound\";\nimport Header from \"./components/Header/Header\";\n\nconst Photo = React.lazy(() => import(\"./features/Photo\"));\n\nconst App = () => {\n  return (\n    <div className=\"photo-app\">\n      <Suspense fallback={<div>Loading ...</div>}>\n        <Router>\n          <Header />\n\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/photos\" />\n\n            <Route path=\"/photos\" component={Photo} />\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport photoReducer from \"../features/Photo/photoSlice\";\r\n\r\n\r\nconst rootReducer = {\r\n    photos: photoReducer\r\n}\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from './app/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}