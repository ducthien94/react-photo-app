{"version":3,"sources":["components/Banner/Banner.js","custom-fields/InputField/index.js","custom-fields/SelectField/index.js","constants/global.js","components/RandomPhoto/index.js","custom-fields/RandomPhotoField/index.js","features/Photo/components/PhotoForm/index.js","features/Photo/pages/AddEditPage/index.js","features/Photo/components/ModalDelete/index.js","features/Photo/components/PhotoList/index.js","features/Photo/pages/MainPage/index.js","features/Photo/index.js"],"names":["Banner","props","title","backgroundUrl","bannerStyle","backgroundImage","className","style","defaultProps","InputField","field","form","type","label","placeholder","disabled","name","value","onChange","onBlur","errors","touched","showError","FormGroup","Label","for","Input","id","invalid","component","FormFeedback","SelectField","options","selectedOption","find","option","selectedValue","changeEvent","target","isDisabled","PHOTO_CATEGORY_OPTIONS","getRandomImageUrl","randomId","Math","trunc","random","RandomPhoto","imageUrl","onImageUrlChange","onRandomButtonBlur","handleRandomPhotoClick","a","randomImageUrl","Row","Col","md","Button","outline","color","onClick","src","alt","onError","RandomPhotoField","Fragment","newImageUrl","setFieldValue","PhotoForm","initialValues","isAddMode","validationSchema","Yup","shape","required","categoryId","nullable","photo","when","is","then","otherwise","notRequired","toast","configure","autoClose","draggable","position","POSITION","TOP_RIGHT","notify","e","setTimeout","success","onSubmit","formikProps","values","isSubmitting","console","log","Container","to","Spinner","size","AddEditPage","dispatch","useDispatch","history","useHistory","photoId","useParams","editedPhoto","useSelector","state","photos","parseInt","Promise","resolve","newPhoto","action","addPhoto","updatePhoto","push","ModalDelete","useState","modal","setModal","onPhotoRemoveClick","toggle","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","PhotoList","onPhotoEditClick","map","i","key","ButtonGroup","photoList","MainPage","removePhoto","Photo","match","useRouteMatch","exact","path","url","NotFound"],"mappings":"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","file":"static/js/4.64993845.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport \"./Banner.scss\"\r\n\r\nconst Banner = props => {\r\n    const { title, backgroundUrl } = props;\r\n    const bannerStyle = backgroundUrl ? { backgroundImage: `url(${backgroundUrl})` } : {}\r\n    return (\r\n        <section className=\"banner\" style={bannerStyle}>\r\n            <h1 className=\"banner__title\">{title}</h1>\r\n        </section>\r\n    )\r\n}\r\n\r\nBanner.propTypes = {\r\n    title: PropTypes.string,\r\n    backgroundUrl: PropTypes.string\r\n}\r\n\r\nBanner.defaultProps = {\r\n    title: '',\r\n    backgroundUrl: ''\r\n}\r\n\r\nexport default Banner\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormGroup, Label, Input, FormFeedback } from \"reactstrap\";\r\nimport { ErrorMessage } from \"formik\";\r\n\r\nconst InputField = (props) => {\r\n  const { field, form, type, label, placeholder, disabled } = props;\r\n  const { name, value, onChange, onBlur } = field;\r\n  const { errors, touched} = form;\r\n  const showError = errors[name] && touched[name];\r\n\r\n  return (\r\n    <div>\r\n      <FormGroup>\r\n        {label && <Label for={name}>{label}</Label>}\r\n        <Input\r\n          id={name}\r\n          type={type}\r\n          name={name}\r\n          value={value}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          disabled={disabled}\r\n          placeholder={placeholder}\r\n          invalid={showError}\r\n        />\r\n        <ErrorMessage name={name} component={FormFeedback} />\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nInputField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  type: PropTypes.string,\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  disable: PropTypes.bool,\r\n};\r\n\r\nInputField.defaultProps = {\r\n  type: \"text\",\r\n  label: \"\",\r\n  placeholder: \"\",\r\n  disabled: false,\r\n};\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormGroup, Label, FormFeedback } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { ErrorMessage } from \"formik\";\r\n\r\nconst SelectField = (props) => {\r\n  const { field, form, label, placeholder, disabled, options } = props;\r\n  const { name, value } = field;\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n\r\n  const selectedOption = options.find((option) => option.value === value);\r\n\r\n  const handleSelectedOptionChang = (selectedOption) => {\r\n    const selectedValue = selectedOption\r\n      ? selectedOption.value\r\n      : selectedOption;\r\n      \r\n    const changeEvent = {\r\n      target: {\r\n        name: name,\r\n        value: selectedValue,\r\n      },\r\n    };\r\n    field.onChange(changeEvent);\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n      <Select\r\n        id={name}\r\n        {...field}\r\n        value={selectedOption}\r\n        onChange={handleSelectedOptionChang}\r\n        isDisabled={disabled}\r\n        placeholder={placeholder}\r\n        options={options}\r\n        className={showError ? \"is-invalid\" : \"\"}\r\n      />\r\n      <ErrorMessage name={name} component={FormFeedback} />\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nSelectField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  options: PropTypes.array,\r\n};\r\n\r\nSelectField.defaultProps = {\r\n  label: \"\",\r\n  placeholder: \"\",\r\n  disabled: false,\r\n  options: [],\r\n};\r\n\r\nexport default SelectField;\r\n","export const PHOTO_CATEGORY_OPTIONS = [\r\n  { value: 1, label: \"Technology\" },\r\n  { value: 2, label: \"Animals\" },\r\n  { value: 3, label: \"Nature\" },\r\n  { value: 4, label: \"Education\" },\r\n  { value: 5, label: \"Styles\" },\r\n  { value: 6, label: \"Vehicle\" },\r\n  { value: 7, label: \"Street\" },\r\n];\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Col, Row } from \"reactstrap\";\r\nimport \"./style.scss\";\r\n\r\nconst getRandomImageUrl = () => {\r\n  const randomId = Math.trunc(Math.random() * 2000);\r\n  // return `https://picsum.photos/600/400/?random&rnd${new Date().getTime()}`;\r\n  return `https://picsum.photos/id/${randomId}/300/200`;\r\n};\r\n\r\nconst RandomPhoto = (props) => {\r\n  const { name, imageUrl, onImageUrlChange, onRandomButtonBlur } = props;\r\n\r\n  const handleRandomPhotoClick = async () => {\r\n    if (onImageUrlChange) {\r\n      const randomImageUrl = getRandomImageUrl();\r\n      onImageUrlChange(randomImageUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className=\"random-photo\">\r\n      <Col md={3} className=\"random-photo__button text-center mb-4\">\r\n        <Button\r\n          type=\"button\"\r\n          outline\r\n          name={name}\r\n          color=\"success\"\r\n          onBlur={onRandomButtonBlur}\r\n          onClick={handleRandomPhotoClick}\r\n        >\r\n          Random a photo\r\n        </Button>\r\n      </Col>\r\n      <Col md={9} className=\"random-photo__photo text-center p-0\">\r\n        {imageUrl && (\r\n          <img\r\n            src={imageUrl}\r\n            alt=\"Ooops ... not found. Please click button again\"\r\n            onError={handleRandomPhotoClick}\r\n          />\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nRandomPhoto.propTypes = {\r\n  name: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n  onImageUrlChange: PropTypes.func,\r\n  onRandomButtonBlur: PropTypes.func,\r\n};\r\n\r\nRandomPhoto.defaultProps = {\r\n  name: \"\",\r\n  imageUrl: \"\",\r\n  onImageUrlChange: null,\r\n  onRandomButtonBlur: null,\r\n};\r\n\r\nexport default RandomPhoto;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Label, FormFeedback } from 'reactstrap';\r\nimport RandomPhoto from '../../components/RandomPhoto';\r\nimport { ErrorMessage } from 'formik';\r\n\r\nconst RandomPhotoField = props => {\r\n    const { field, form, label } = props;\r\n    const { name, value, onBlur } = field;\r\n    const { errors, touched } = form;\r\n    const showError = errors[name] && touched[name];\r\n\r\n    const handleImageUrlChange = (newImageUrl) => {\r\n        form.setFieldValue(name, newImageUrl)\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {label && <Label for={name}>{label}</Label>}\r\n        <RandomPhoto\r\n          name={name}\r\n          imageUrl={value}\r\n          onImageUrlChange={handleImageUrlChange}\r\n          onRandomButtonBlur={onBlur}\r\n          invalid={true}\r\n        />\r\n        <div className={showError ? \"is-invalid\" : \"\"}></div>\r\n        <ErrorMessage name={name} component={FormFeedback} />\r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\nRandomPhotoField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n  label: PropTypes.string,\r\n};\r\n\r\nRandomPhotoField.defaultProps = {\r\n  label: \"\",\r\n};\r\n\r\n\r\nexport default RandomPhotoField\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Yup from \"yup\";\r\nimport { Container, Col, Row, Button, Spinner } from \"reactstrap\";\r\nimport { Formik, Form, FastField } from \"formik\";\r\nimport InputField from \"../../../../custom-fields/InputField\";\r\nimport SelectField from \"../../../../custom-fields/SelectField\";\r\nimport { PHOTO_CATEGORY_OPTIONS } from \"../../../../constants/global\";\r\nimport RandomPhotoField from \"../../../../custom-fields/RandomPhotoField\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PhotoForm = (props) => {\r\n  const { initialValues, isAddMode } = props;\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"Title is required.\"),\r\n    categoryId: Yup.number().required(\"Category is required\").nullable(),\r\n    photo: Yup.string().when(\"categoryId\", {\r\n      is: 1,\r\n      then: Yup.string().required(\"Photo is required.\"),\r\n      otherwise: Yup.string().notRequired(),\r\n    }),\r\n  });\r\n\r\n  toast.configure({\r\n    autoClose: 3000,\r\n    draggable: false,\r\n    position: toast.POSITION.TOP_RIGHT,\r\n  });\r\n\r\n  const notify = (e) =>\r\n    setTimeout(() => {\r\n      if (isAddMode) {\r\n        toast.success(\"Add photo successful !\");\r\n      } else {\r\n        toast.success(\"Update photo successful !\");\r\n      }\r\n    }, 1500);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={props.onSubmit}\r\n    >\r\n      {(formikProps) => {\r\n        const { values, errors, touched, isSubmitting } = formikProps;\r\n        console.log({ values, errors, touched });\r\n        return (\r\n          <div>\r\n            <Container>\r\n              <Form>\r\n                <Row form>\r\n                  <Col md={6}>\r\n                    <FastField\r\n                      name=\"title\"\r\n                      component={InputField}\r\n                      label=\"Title\"\r\n                      placeholder=\"Enter a title\"\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col md={6}>\r\n                    <FastField\r\n                      name=\"categoryId\"\r\n                      component={SelectField}\r\n                      label=\"Category\"\r\n                      options={PHOTO_CATEGORY_OPTIONS}\r\n                      placeholder=\"What is your photo category ?\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <FastField\r\n                  name=\"photo\"\r\n                  component={RandomPhotoField}\r\n                  label=\"Photo\"\r\n                />\r\n                <Row>\r\n                  <Col className=\"text-center mt-5\">\r\n                    <Link to=\"/photos\" className=\"mr-3\">\r\n                      <Button>Cancel</Button>\r\n                    </Link>\r\n                    <Button type=\"submit\" color=\"info\" onClick={notify}>\r\n                      {isSubmitting && <Spinner size=\"sm\" />}{\" \"}\r\n                      {isAddMode ? \"Add to album\" : \"Update your photo\"}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Container>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nPhotoForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nPhotoForm.defaultProps = {\r\n  onSubmit: null,\r\n};\r\n\r\nexport default PhotoForm;\r\n","import React from \"react\";\r\nimport Banner from \"../../../../components/Banner/Banner\";\r\nimport PhotoForm from \"../../components/PhotoForm\";\r\nimport { addPhoto, updatePhoto } from \"../../photoSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst AddEditPage = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { photoId } = useParams();\r\n  const isAddMode = !photoId;\r\n\r\n  const editedPhoto = useSelector((state) => {\r\n    return state.photos.find((photo) => photo.id === parseInt(photoId));\r\n  });\r\n\r\n  const initialValues = isAddMode\r\n    ? {\r\n        title: \"\",\r\n        categoryId: null,\r\n        photo: \"\",\r\n      }\r\n    : editedPhoto;\r\n\r\n  const handleSubmit = (values) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        if (isAddMode) {\r\n          const newPhoto = {\r\n            ...values,\r\n            id: Math.trunc(Math.random() * 9999),\r\n          };\r\n          const action = addPhoto(newPhoto);\r\n          dispatch(action);\r\n        } else {\r\n          const action = updatePhoto(values);\r\n          dispatch(action);\r\n        }\r\n\r\n        history.push(\"/photos\");\r\n        resolve(true);\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Banner\r\n        title=\"Pick your a photo\"\r\n        backgroundUrl=\"https://i.pinimg.com/originals/8e/69/23/8e69231a11e5786ce274a1243e0e04b4.jpg\"\r\n      />\r\n      <PhotoForm\r\n        isAddMode={isAddMode}\r\n        onSubmit={handleSubmit}\r\n        initialValues={initialValues}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEditPage;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst ModalDelete = (props) => {\r\n  const [modal, setModal] = useState(false);\r\n  const { id, onPhotoRemoveClick } = props;\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  toast.configure({\r\n    autoClose: 3000,\r\n    draggable: false,\r\n    position: toast.POSITION.TOP_RIGHT,\r\n  });\r\n\r\n  const notify = () =>\r\n    setTimeout(() => {\r\n      toast.success(\"Delete photo successful !\");\r\n    }, 500);\r\n\r\n  return (\r\n    <div>\r\n      <Button outline color=\"danger\" onClick={toggle}>\r\n        Delete\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Delete photo</ModalHeader>\r\n        <ModalBody>Are you sure ?</ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            color=\"danger\"\r\n            onClick={() => {\r\n              onPhotoRemoveClick(id);\r\n              toggle();\r\n              notify();\r\n            }}\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalDelete;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, ButtonGroup, Button } from \"reactstrap\";\r\nimport ModalDelete from \"../ModalDelete\";\r\n\r\nconst PhotoList = (props) => {\r\n  const { photos, onPhotoEditClick, onPhotoRemoveClick } = props;\r\n\r\n  return (\r\n    <div className=\"photo-list\">\r\n      {photos.map((photo, i) => {\r\n        return (\r\n          <div className=\"photo-item\" key={i}>\r\n            <Col>\r\n              {\" \"}\r\n              <img src={photo.photo} alt={photo.title} />\r\n              <div className=\"overlay\">\r\n                <div className=\"text\">{photo.title}</div>\r\n                <ButtonGroup>\r\n                  <Button\r\n                    className=\"mr-3\"\r\n                    outline\r\n                    color=\"info\"\r\n                    onClick={() => onPhotoEditClick(photo.id)}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n\r\n                  <ModalDelete\r\n                    id={photo.id}\r\n                    onPhotoRemoveClick={onPhotoRemoveClick}\r\n                  />\r\n                </ButtonGroup>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nPhotoList.propTypes = {\r\n  photoList: PropTypes.array,\r\n  onPhotoEditClick: PropTypes.func,\r\n  onPhotoRemoveClick: PropTypes.func,\r\n};\r\n\r\nPhotoList.defaultProps = {\r\n  photoList: [],\r\n  onPhotoEditClick: null,\r\n  onPhotoRemoveClick: null,\r\n};\r\n\r\nexport default PhotoList;\r\n","import React from \"react\";\r\nimport Banner from \"../../../../components/Banner/Banner\";\r\nimport { Container, Button } from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./style.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport PhotoList from \"../../components/PhotoList\";\r\nimport { removePhoto } from \"../../photoSlice\";\r\n\r\n\r\nconst MainPage = () => {\r\n  const photos = useSelector((state) => state.photos);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handlePhotoEditClick = (id) => {\r\n    history.push(`/photos/${id}`);\r\n  };\r\n\r\n  const handlePhotoRemoveClick = (id) => {\r\n    const action = removePhoto(id);\r\n    dispatch(action);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Banner title=\"Your awesome photos \" />\r\n\r\n      <Container className=\"text-center\">\r\n        <Link to=\"photos/add\">\r\n          <Button color=\"success\">Add new photo </Button>\r\n        </Link>\r\n\r\n        <PhotoList\r\n          photos={photos}\r\n          onPhotoEditClick={handlePhotoEditClick}\r\n          onPhotoRemoveClick={handlePhotoRemoveClick}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport NotFound from \"../../components/NotFound\";\r\nimport AddEditPage from \"../Photo/pages/AddEditPage\";\r\nimport MainPage from \"../Photo/pages/MainPage\";\r\n\r\nconst Photo = (props) => {\r\n  const match = useRouteMatch();\r\n  console.log({ match });\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={match.url} component={MainPage} />\r\n        <Route exact path={`${match.url}/add`} component={AddEditPage} />\r\n        <Route exact path={`${match.url}/:photoId`} component={AddEditPage} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Photo;\r\n"],"sourceRoot":""}